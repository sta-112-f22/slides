---
title: "Simple Linear Regression Part 2"
author: "Lucy D'Agostino McGowan"
footer:  "[Dr. Lucy D'Agostino McGowan](https://lucymcgowan.com)"
logo: "img/favicon.png"
editor: source
format: 
  revealjs: 
    theme: [custom.scss]
    slide-number: true
    chalkboard: true
knitr:
  opts_chunk: 
    code-fold: true
    echo: true
---

```{r, child = "setup.rmd"}
```

## Data

```{r}
#| code-fold: false
library(tidyverse)

starwars_nojabba <- starwars %>%
  drop_na(mass, height) %>%
  filter(mass < 1000)
```

## Simple linear regression

```{r}
#| code-fold: false
mod <- lm(mass ~ height, data = starwars_nojabba)
```

<br>

```{r}
#| code-fold: false
#| code-line-numbers: "2"
starwars_nojabba %>%
  mutate(y_hat = fitted(mod)) %>%
  select(y_hat, mass, height)
```


# Where did these $\hat{y}$ values come from?

## Fitted values

::: {layout-ncol=2}

```{r}
#| code-fold: false
lm(mass ~ height, 
   data = starwars_nojabba)
```


```{r}
#| code-fold: false
starwars_nojabba %>%
  mutate(y_hat = fitted(mod)) %>%
  select(y_hat, mass, height) %>%
  slice(1:3)
```

:::

. . .

### $\hat{y}_1 = -32.5 + 0.62 \times 172$

. . .

### $\hat{y}_2 = -32.5 + 0.62 \times 167$

. . .

### $\hat{y}_3 = -32.5 + 0.62 \times 96$

## Simple linear regression

::: {.question}
How did we decide on **this** line?
:::


```{r}
starwars_nojabba <- starwars_nojabba %>%
  mutate(fitted = fitted(lm(mass ~ height, data = starwars_nojabba)))

ggplot(starwars_nojabba, aes(x = height, mass)) +
  geom_point(color = "#86a293") +
  geom_segment(aes(
    x = height,
    y = mass,
    xend = height,
    yend = fitted
  ),
  color = "blue") +
  geom_smooth(
    method = "lm",
    se = FALSE,
    formula = "y ~ x",
    color = "#86a293"
  ) +
  labs(title = "The relationship between mass and height for Star Wars characters",
       caption = "Data from SWAPI (swapi.dev)")
```


## Minimize Least Squares

```{r}
ggplot(starwars_nojabba, aes(x = height, mass)) +
  geom_rect(
    aes(
      xmin = height,
      xmax = height + mass - fitted,
      ymin = mass,
      ymax = fitted
    ),
    fill = "blue",
    color = "blue",
    alpha = 0.2
  ) +
  geom_smooth(
    method = "lm",
    se = FALSE,
    formula = "y ~ x",
    color = "#86a293"
  ) +
  geom_point(color = "#86a293") +
  coord_fixed() +
  labs(title = "The relationship between mass and height for Star Wars characters",
       caption = "Data from SWAPI (swapi.dev)")
```

## "Squared Residuals"


```{r}
ggplot(starwars_nojabba, aes(x = height, mass)) +
  geom_rect(
    aes(
      xmin = height,
      xmax = height + mass - fitted,
      ymin = mass,
      ymax = fitted
    ),
    fill = "blue",
    color = "blue",
    alpha = 0.2
  ) +
  geom_smooth(
    method = "lm",
    se = FALSE,
    formula = "y ~ x",
    color = "#86a293"
  ) +
  geom_point(color = "#86a293") +
  coord_fixed() +
  labs(title = "The relationship between mass and height for Star Wars characters",
       caption = "Data from SWAPI (swapi.dev)")
```

## "Residuals"


```{r}
ggplot(starwars_nojabba, aes(x = height, mass)) +
  geom_point(color = "#86a293") +
  geom_segment(aes(
    x = height,
    y = mass,
    xend = height,
    yend = fitted
  ),
  color = "blue") +
  geom_smooth(
    method = "lm",
    se = FALSE,
    formula = "y ~ x",
    color = "#86a293"
  ) +
  labs(title = "The relationship between mass and height for Star Wars characters",
       caption = "Data from SWAPI (swapi.dev)")
```

# {{< fa pause >}} Let's pause for definitions

## Definitions

::: {layout-ncol=2}

> * **residual** $(e)$
> * **squared residual** $(e^2)$
> * **sum of squared residuals** (SSE)
> * **n**
> * **degrees of freedom**
> * **standard deviation of the errors** $(\sigma_\varepsilon)$


###

> * $y - \hat{y}$
> * $(y-\hat{y})^2$
> * $\sum(y-\hat{y})^2$
> * sample size
> * $n - p$ for simple linear regression: $n - 2$
> * estimated by $\hat{\sigma}_\varepsilon=\sqrt{\frac{\textrm{SSE}}{df}}$


:::

## A note about notation

$$\Large \sum(y-\hat{y})^2$$

. . .

$$\Large \sum_{i=1}^n(y_i - \hat{y}_i)^2$$

## A note about notation

#### the $i$ indicates a single individual

$$\Large e_i = y_i - \hat{y}_i$$


## A note about notation

#### for the 1st observation, $i = 1$

$$\Large e_1 = y_1 - \hat{y}_1$$

## {{< fa laptop >}} `Application Exercise`

1. Go to [lucy.shinyapps.io/least-squares/](https://lucy.shinyapps.io/least-squares/)
2. This shows a scatter plot of 10 data points with a line estimating the relationship between `x` and `y`. Drag the blue points to change the line.
3. See if you can find a line that minimizes the sum of square errors

```{r}
#| code-fold: false
#| echo: false
countdown::countdown(3)
```

# Let's do this in R!

## Calculate the residual

```{r}
#| code-fold: false
#| code-line-numbers: "1-7"
#| layout-ncol: 2
#| output-location: column
mod <- lm(mass ~ height,
          data = starwars_nojabba)

starwars_nojabba %>%
  mutate(
    y_hat = fitted(mod),
    residual = mass - y_hat) %>%
  select(mass, height, y_hat, residual)
```


## Calculate the residual squared

::: {.question .small}
How could I add the residual squared to this data frame?
:::

```{r}
#| code-fold: false
#| code-line-numbers: "1-7"
#| layout-ncol: 2
#| output-location: column
mod <- lm(mass ~ height,
          data = starwars_nojabba)

starwars_nojabba %>%
  mutate(
    y_hat = fitted(mod),
    residual = mass - y_hat) %>%
  select(mass, height, y_hat, residual)
```


## Calculate the residual squared

::: {.question .small}
How could I add the residual squared to this data frame?
:::

```{r}
#| code-fold: false
#| code-line-numbers: "8"
#| layout-ncol: 2
#| output-location: column
mod <- lm(mass ~ height, 
          data = starwars_nojabba)

starwars_nojabba %>%
  mutate(
    y_hat = fitted(mod),
    residual = mass - y_hat,
    residual_2 = residual^2) %>%
  select(mass, height, y_hat, residual_2)
```

## Calculate the SSE

::: {.question .small}
How can I summarize this dataset to calculate the sum of the squared residuals?
:::


```{r}
#| code-fold: false
#| code-line-numbers: "1-8"
#| layout-ncol: 2
#| output-location: column
mod <- lm(mass ~ height, 
          data = starwars_nojabba)

starwars_nojabba %>%
  mutate(
    y_hat = fitted(mod),
    residual = mass - y_hat,
    residual_2 = residual^2)  %>%
  select(mass, height, y_hat, residual_2)
```

## Calculate the SSE

::: {.question .small}
How can I summarize this dataset to calculate the sum of the squared residuals?
:::


```{r}
#| code-fold: false
#| code-line-numbers: "9-11"
#| layout-ncol: 2
#| output-location: column
mod <- lm(mass ~ height, 
          data = starwars_nojabba)

starwars_nojabba %>%
  mutate(
    y_hat = fitted(mod),
    residual = mass - y_hat,
    residual_2 = residual^2) %>%
  summarize(
    sse = sum(residual_2)
    )
```


## Calculate the sample size

::: {.question .small}
How can I add the total sample size?
:::


```{r}
#| code-fold: false
#| code-line-numbers: "9-11"
#| layout-ncol: 2
#| output-location: column
mod <- lm(mass ~ height, 
          data = starwars_nojabba)

starwars_nojabba %>%
  mutate(
    y_hat = fitted(mod),
    residual = mass - y_hat,
    residual_2 = residual^2) %>%
  summarize(
    sse = sum(residual_2)
    )
```

## Calculate the sample size

::: {.question .small}
How can I add the total sample size?
:::


```{r}
#| code-fold: false
#| code-line-numbers: "9-12"
#| layout-ncol: 2
#| output-location: column
mod <- lm(mass ~ height, 
          data = starwars_nojabba)

starwars_nojabba %>%
  mutate(
    y_hat = fitted(mod),
    residual = mass - y_hat,
    residual_2 = residual^2) %>%
  summarize(
    sse = sum(residual_2),
    n = n()
    )
```

## Calculate the degrees of freedom 

::: {.question .small}
How can I add the degrees of freedom $(n-p)$?
:::


```{r}
#| code-fold: false
#| code-line-numbers: "9-11"
#| layout-ncol: 2
#| output-location: column
mod <- lm(mass ~ height, 
          data = starwars_nojabba)

starwars_nojabba %>%
  mutate(
    y_hat = fitted(mod),
    residual = mass - y_hat,
    residual_2 = residual^2) %>%
  summarize(
    sse = sum(residual_2),
    n = n()
    )
```

## Calculate the degrees of freedom

::: {.question .small}
How can I add the degrees of freedom $(n-p)$?
:::


```{r}
#| code-fold: false
#| code-line-numbers: "9-12"
#| layout-ncol: 2
#| output-location: column
mod <- lm(mass ~ height, 
          data = starwars_nojabba)

starwars_nojabba %>%
  mutate(
    y_hat = fitted(mod),
    residual = mass - y_hat,
    residual_2 = residual^2) %>%
  summarize(
    sse = sum(residual_2),
    n = n(),
    df = n - 2
    )
```

## Calculate the residual standard error

::: {.question .small}
How can I add the total $\hat{\sigma}_\varepsilon= \sqrt{\frac{\textrm{SSE}}{df}}$?
:::


```{r}
#| code-fold: false
#| code-line-numbers: "9-12"
#| layout-ncol: 2
#| output-location: column
mod <- lm(mass ~ height, 
          data = starwars_nojabba)

starwars_nojabba %>%
  mutate(
    y_hat = fitted(mod),
    residual = mass - y_hat,
    residual_2 = residual^2) %>%
  summarize(
    sse = sum(residual_2),
    n = n(),
    df = n - 2
    )
```

## Calculate the residual standard error

::: {.question .small}
How can I add the total $\hat{\sigma}_\varepsilon= \sqrt{\frac{\textrm{SSE}}{df}}$?
:::


```{r}
#| code-fold: false
#| code-line-numbers: "9-13"
#| layout-ncol: 2
#| output-location: column
mod <- lm(mass ~ height, 
          data = starwars_nojabba)

starwars_nojabba %>%
  mutate(
    y_hat = fitted(mod),
    residual = mass - y_hat,
    residual_2 = residual^2) %>%
  summarize(
    sse = sum(residual_2),
    n = n(),
    df = n - 2,
    sigma = sqrt(sse / df)
    )
```


## Find residual standard error in `lm` output

```{r}
#| code-fold: false

mod <- lm(mass ~ height, data = starwars_nojabba)

summary(mod)
```

## {{< fa laptop >}} `Application Exercise` {.small}

1. Create a new project from this template in RStudio Pro:
```bash
https://github.com/sta-112-f22/appex-07.git
```
2. Load the packages and data by running the top chunk of R code
3. Learn about the `PorschePrice` data by running `?PorschePrice` in your Console 
4. Fit a linear model predicting `Price` from `Mileage`
5. Add a variable called `y_hat` to the `PorschePrice` dataset with the predicted y values
6. Add a variable called `residual` to the `PorschePrice` dataset with the residuals

```{r}
#| code-fold: false
#| echo: false
countdown::countdown(7)
```



